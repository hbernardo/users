# Default values for users.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2
version: v1

image:
  repository: hbernardo-users
  pullPolicy: Never # otherwise Kubernetes will try to download the image, but it's located in Minikube docker env
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

service:
  type: ClusterIP
  port: 80

resources:
  limits:
    cpu: 100m
    memory: 192Mi
  requests:
    cpu: 30m
    memory: 96Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

http:
  port: 8080

health:
  port: 8081
  initialDelaySeconds: 5
  livenessProbePath: /health/live
  readinessProbePath: /health/ready

environment:
  PORT: 8080
  HEALTH_CHECK_PORT: 8081
  LIVENESS_PROBE_PATH: /health/live
  READINESS_PROBE_PATH: /health/ready
  LOG_LEVEL: error
  RATE_LIMIT_MAX_FREQUENCY: 3
  RATE_LIMIT_BURST_SIZE: 5
  RATE_LIMIT_MEMORY_DURATION: "1m"




### UNUSED VARIABLES/FEATURES ###

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
